//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Script: ./scripts/cldr-plural-rules.csx
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Alrev.Intl.Abstractions;
using Alrev.Intl.Abstractions.PluralRules;
using System;
using System.Linq;

namespace Alrev.Intl.PluralRules.Resources.Cardinals
{
    // https://unicode-org.github.io/cldr-staging/charts/39/supplemental/language_plural_rules.html#ar
    public class ArabicPluralRulesCardinalResource : IPluralRulesResource, IResource
    {
        public string Locale { get; } = "ar";

        public PluralRulesTypeValues PluralRulesType => PluralRulesTypeValues.Cardinal;

        // zero - n = 0
        // one - n = 1
        // two - n = 2
        // few - n % 100 = 3..10
        // many - n % 100 = 11..99
        // other - 
        public PluralRulesValues Evaluate(IPluralRulesContext context) => context switch
        {
            null => throw new ArgumentNullException(nameof(context)),
            IPluralRulesContext prc when prc.n == 0 => PluralRulesValues.Zero,
            IPluralRulesContext prc when prc.n == 1 => PluralRulesValues.One,
            IPluralRulesContext prc when prc.n == 2 => PluralRulesValues.Two,
            IPluralRulesContext prc when (prc.n % 100).Between(3, 10) => PluralRulesValues.Few,
            IPluralRulesContext prc when (prc.n % 100).Between(11, 99) => PluralRulesValues.Many,
            _ => PluralRulesValues.Other
        };
    }
}