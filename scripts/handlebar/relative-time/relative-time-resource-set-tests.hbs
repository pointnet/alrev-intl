//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Script: {{script}}
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Alrev.Intl.Abstractions.RelativeTime;
using Alrev.Intl.RelativeTime.Globalization;
using System;
using System.Globalization;
using Xunit;


namespace {{namespace}}.Tests.Resources
{
    public class {{classPrefix}}RelativeTimeResourceSetTests
    {
        [Fact]
        public void UnknownRelativeTimeUnit_ShouldThrow_NotImplementedException()
        {
            RelativeTimeLocalizer localizer = new RelativeTimeLocalizer();
            IRelativeTimeResourceSet resourceSet = localizer.GetLocalizer(new CultureInfo("{{locale}}"));
            Exception ex = Record.Exception(() => resourceSet.GetRelativeTimeStylesResource(RelativeTimeUnitValues.Unknown));
            Assert.IsType<NotImplementedException>(ex);
        }

        [Theory]
{{#each relativeTimes}}
        [InlineData(RelativeTimeUnitValues.{{@key}})]
{{/each}}
        public void SpecificRelativeTimeUnit_ShouldReturn_IRelativeTimeResourceSet(RelativeTimeUnitValues expected)
        {
            RelativeTimeLocalizer localizer = new RelativeTimeLocalizer();
            IRelativeTimeResourceSet resourceSet = localizer.GetLocalizer(new CultureInfo("{{locale}}"));
            IRelativeTimeStylesResource resourceStyles = resourceSet.GetRelativeTimeStylesResource(expected);
            Assert.Equal(expected, resourceStyles.RelativeTimeUnit);
        }
    }
}