{{> autoGenerated script}}
using Alrev.Intl.Abstractions;
using Alrev.Intl.Abstractions.List;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Globalization;

namespace {{namespace}}
{
	/// <summary>
	/// List resources for '{{englishName}}' [{{locale}}]
	/// </summary>
	/// <seealso href="https://unicode-org.github.io/cldr-staging/charts/39/by_type/miscellaneous.displaying_lists.html"/>
	public class {{className}}Resource : ReadOnlyDictionary<ListTypeValues, IReadOnlyDictionary<IntlStyleValues, IReadOnlyDictionary<ListPartValues, string>>>, IListResource
	{
		/// <summary>
		/// The <see cref="IIntlResource"/> culture
		/// </summary>
		public CultureInfo Culture { get; }

		/// <summary>
		/// The class constructor
		/// </summary>
		public {{className}}Resource()
			: base(new Dictionary<ListTypeValues, IReadOnlyDictionary<IntlStyleValues, IReadOnlyDictionary<ListPartValues, string>>>()
			{
{{#each resources}}
				{
					{{@key}},
					new ReadOnlyDictionary<IntlStyleValues, IReadOnlyDictionary<ListPartValues, string>>(
						new Dictionary<IntlStyleValues, IReadOnlyDictionary<ListPartValues, string>>()
						{
{{#each this}}
							{
								{{@key}},
								new ReadOnlyDictionary<ListPartValues, string>(
									new Dictionary<ListPartValues, string>()
									{
{{#each this}}
										{ {{@key}}, "{{{this}}}" }{{notLast ../this @index ","}}
{{/each}}
									})
							}{{notLast ../this @index ","}}
{{/each}}
						})
				}{{notLast ../resources @index ","}}
{{/each}}
			})
		{
			this.Culture = new CultureInfo("{{locale}}");
		}
	}
}