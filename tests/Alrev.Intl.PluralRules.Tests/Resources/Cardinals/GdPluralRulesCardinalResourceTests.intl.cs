// --------------------------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//   Script: ./scripts/cldr-plural-rules.csx
//
//   Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// --------------------------------------------------------------------------------------------------
using Alrev.Intl.Abstractions.PluralRules;
using Alrev.Intl.PluralRules.Tests.Fixtures;
using System;
using System.Globalization;
using Xunit;

namespace Alrev.Intl.PluralRules.Tests.Resources.Cardinals
{
	[Collection("PluralRulesCardinalResourceLocalizer")]
	public class GdPluralRulesCardinalResourceTests
	{
		private PluralRulesCardinalResourceLocalizerFixture Fixture { get; }

		public GdPluralRulesCardinalResourceTests(PluralRulesCardinalResourceLocalizerFixture fixture)	
		{
			this.Fixture = fixture;
		}

		[Fact]
		public void EvaluateWithNullPluralRulesContext_ShouldThrow_ArgumentNullExpection()
		{
			CultureInfo culture = new CultureInfo("gd");
			IPluralRulesResource resource = this.Fixture.Localizer.ResolveResource(culture);
			Exception ex = Record.Exception(() => resource.Evaluate(null));
			Assert.IsType<ArgumentNullException>(ex);
		}

		[Theory]
		[InlineData("1", PluralRulesValues.One)]
		[InlineData("11", PluralRulesValues.One)]
		[InlineData("1.0", PluralRulesValues.One)]
		[InlineData("11.0", PluralRulesValues.One)]
		[InlineData("1.00", PluralRulesValues.One)]
		[InlineData("11.00", PluralRulesValues.One)]
		[InlineData("1.000", PluralRulesValues.One)]
		[InlineData("11.000", PluralRulesValues.One)]
		[InlineData("1.0000", PluralRulesValues.One)]
		[InlineData("2", PluralRulesValues.Two)]
		[InlineData("12", PluralRulesValues.Two)]
		[InlineData("2.0", PluralRulesValues.Two)]
		[InlineData("12.0", PluralRulesValues.Two)]
		[InlineData("2.00", PluralRulesValues.Two)]
		[InlineData("12.00", PluralRulesValues.Two)]
		[InlineData("2.000", PluralRulesValues.Two)]
		[InlineData("12.000", PluralRulesValues.Two)]
		[InlineData("2.0000", PluralRulesValues.Two)]
		[InlineData("3", PluralRulesValues.Few)]
		[InlineData("4", PluralRulesValues.Few)]
		[InlineData("5", PluralRulesValues.Few)]
		[InlineData("6", PluralRulesValues.Few)]
		[InlineData("7", PluralRulesValues.Few)]
		[InlineData("8", PluralRulesValues.Few)]
		[InlineData("9", PluralRulesValues.Few)]
		[InlineData("10", PluralRulesValues.Few)]
		[InlineData("13", PluralRulesValues.Few)]
		[InlineData("14", PluralRulesValues.Few)]
		[InlineData("15", PluralRulesValues.Few)]
		[InlineData("16", PluralRulesValues.Few)]
		[InlineData("17", PluralRulesValues.Few)]
		[InlineData("18", PluralRulesValues.Few)]
		[InlineData("19", PluralRulesValues.Few)]
		[InlineData("3.0", PluralRulesValues.Few)]
		[InlineData("4.0", PluralRulesValues.Few)]
		[InlineData("5.0", PluralRulesValues.Few)]
		[InlineData("6.0", PluralRulesValues.Few)]
		[InlineData("7.0", PluralRulesValues.Few)]
		[InlineData("8.0", PluralRulesValues.Few)]
		[InlineData("9.0", PluralRulesValues.Few)]
		[InlineData("10.0", PluralRulesValues.Few)]
		[InlineData("13.0", PluralRulesValues.Few)]
		[InlineData("14.0", PluralRulesValues.Few)]
		[InlineData("15.0", PluralRulesValues.Few)]
		[InlineData("16.0", PluralRulesValues.Few)]
		[InlineData("17.0", PluralRulesValues.Few)]
		[InlineData("18.0", PluralRulesValues.Few)]
		[InlineData("19.0", PluralRulesValues.Few)]
		[InlineData("3.00", PluralRulesValues.Few)]
		[InlineData("0", PluralRulesValues.Other)]
		[InlineData("20", PluralRulesValues.Other)]
		[InlineData("21", PluralRulesValues.Other)]
		[InlineData("22", PluralRulesValues.Other)]
		[InlineData("23", PluralRulesValues.Other)]
		[InlineData("24", PluralRulesValues.Other)]
		[InlineData("25", PluralRulesValues.Other)]
		[InlineData("26", PluralRulesValues.Other)]
		[InlineData("27", PluralRulesValues.Other)]
		[InlineData("28", PluralRulesValues.Other)]
		[InlineData("29", PluralRulesValues.Other)]
		[InlineData("30", PluralRulesValues.Other)]
		[InlineData("31", PluralRulesValues.Other)]
		[InlineData("32", PluralRulesValues.Other)]
		[InlineData("33", PluralRulesValues.Other)]
		[InlineData("34", PluralRulesValues.Other)]
		[InlineData("100", PluralRulesValues.Other)]
		[InlineData("1000", PluralRulesValues.Other)]
		[InlineData("10000", PluralRulesValues.Other)]
		[InlineData("100000", PluralRulesValues.Other)]
		[InlineData("1000000", PluralRulesValues.Other)]
		[InlineData("0.0", PluralRulesValues.Other)]
		[InlineData("0.9", PluralRulesValues.Other)]
		[InlineData("1.1", PluralRulesValues.Other)]
		[InlineData("1.6", PluralRulesValues.Other)]
		[InlineData("10.1", PluralRulesValues.Other)]
		[InlineData("100.0", PluralRulesValues.Other)]
		[InlineData("1000.0", PluralRulesValues.Other)]
		[InlineData("10000.0", PluralRulesValues.Other)]
		[InlineData("100000.0", PluralRulesValues.Other)]
		[InlineData("1000000.0", PluralRulesValues.Other)]
		public void Evaluate_ShouldReturn_ExpectedPluralRulesValues(string input, PluralRulesValues expected)
		{
			CultureInfo culture = new CultureInfo("gd");
			IPluralRulesResource resource = this.Fixture.Localizer.ResolveResource(culture);
			PluralRulesValues result = resource.Evaluate(PluralRulesContext.Create(input));
			Assert.Equal(expected, result);	
		}
	}
}