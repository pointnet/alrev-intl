//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Script: ./scripts/cldr-plural-rules.csx
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Alrev.Intl.Abstractions.PluralRules;
using System;
using System.Globalization;
using Xunit;

namespace Alrev.Intl.PluralRules.Tests.Resources.Cardinals
{
    [Collection("PluralRulesLocalizers")]
    public class TachelhitPluralRulesCardinalResourceTests
    {
        private PluralRulesLocalizersFixture fixture;

        public TachelhitPluralRulesCardinalResourceTests(PluralRulesLocalizersFixture fixture)
        {
            this.fixture = fixture;
        }

        [Fact]
        public void PluralRulesType_ShouldReturn_PluralRulesValuesCardinal()
        {
            CultureInfo culture = new CultureInfo("shi");
            IPluralRulesResource resource = this.fixture.CardinalLocalizer.GetLocalizer(culture);
            Assert.Equal(PluralRulesTypeValues.Cardinal, resource.PluralRulesType);
        }

        [Fact]
        public void EvaluateWithNullPluralRulesContext_ShouldThrow_ArgumentNullExpection()
        {
            CultureInfo culture = new CultureInfo("shi");
            IPluralRulesResource resource = this.fixture.CardinalLocalizer.GetLocalizer(culture);
            Exception ex = Record.Exception(() => resource.Evaluate(null));
            Assert.IsType<ArgumentNullException>(ex);
        }

        [Theory]
        [InlineData("0", PluralRulesValues.One)]
        [InlineData("1", PluralRulesValues.One)]
        [InlineData("0.0", PluralRulesValues.One)]
        [InlineData("1.0", PluralRulesValues.One)]
        [InlineData("0.00", PluralRulesValues.One)]
        [InlineData("0.04", PluralRulesValues.One)]
        [InlineData("2", PluralRulesValues.Few)]
        [InlineData("3", PluralRulesValues.Few)]
        [InlineData("4", PluralRulesValues.Few)]
        [InlineData("5", PluralRulesValues.Few)]
        [InlineData("6", PluralRulesValues.Few)]
        [InlineData("7", PluralRulesValues.Few)]
        [InlineData("8", PluralRulesValues.Few)]
        [InlineData("9", PluralRulesValues.Few)]
        [InlineData("10", PluralRulesValues.Few)]
        [InlineData("2.0", PluralRulesValues.Few)]
        [InlineData("3.0", PluralRulesValues.Few)]
        [InlineData("4.0", PluralRulesValues.Few)]
        [InlineData("5.0", PluralRulesValues.Few)]
        [InlineData("6.0", PluralRulesValues.Few)]
        [InlineData("7.0", PluralRulesValues.Few)]
        [InlineData("8.0", PluralRulesValues.Few)]
        [InlineData("9.0", PluralRulesValues.Few)]
        [InlineData("10.0", PluralRulesValues.Few)]
        [InlineData("2.00", PluralRulesValues.Few)]
        [InlineData("3.00", PluralRulesValues.Few)]
        [InlineData("4.00", PluralRulesValues.Few)]
        [InlineData("5.00", PluralRulesValues.Few)]
        [InlineData("6.00", PluralRulesValues.Few)]
        [InlineData("7.00", PluralRulesValues.Few)]
        [InlineData("8.00", PluralRulesValues.Few)]
        [InlineData("11", PluralRulesValues.Other)]
        [InlineData("12", PluralRulesValues.Other)]
        [InlineData("13", PluralRulesValues.Other)]
        [InlineData("14", PluralRulesValues.Other)]
        [InlineData("15", PluralRulesValues.Other)]
        [InlineData("16", PluralRulesValues.Other)]
        [InlineData("17", PluralRulesValues.Other)]
        [InlineData("18", PluralRulesValues.Other)]
        [InlineData("19", PluralRulesValues.Other)]
        [InlineData("20", PluralRulesValues.Other)]
        [InlineData("21", PluralRulesValues.Other)]
        [InlineData("22", PluralRulesValues.Other)]
        [InlineData("23", PluralRulesValues.Other)]
        [InlineData("24", PluralRulesValues.Other)]
        [InlineData("25", PluralRulesValues.Other)]
        [InlineData("26", PluralRulesValues.Other)]
        [InlineData("100", PluralRulesValues.Other)]
        [InlineData("1000", PluralRulesValues.Other)]
        [InlineData("10000", PluralRulesValues.Other)]
        [InlineData("100000", PluralRulesValues.Other)]
        [InlineData("1000000", PluralRulesValues.Other)]
        [InlineData("1.1", PluralRulesValues.Other)]
        [InlineData("1.9", PluralRulesValues.Other)]
        [InlineData("2.1", PluralRulesValues.Other)]
        [InlineData("2.7", PluralRulesValues.Other)]
        [InlineData("10.1", PluralRulesValues.Other)]
        [InlineData("100.0", PluralRulesValues.Other)]
        [InlineData("1000.0", PluralRulesValues.Other)]
        [InlineData("10000.0", PluralRulesValues.Other)]
        [InlineData("100000.0", PluralRulesValues.Other)]
        [InlineData("1000000.0", PluralRulesValues.Other)]
        public void Evaluate_ShouldReturn_ExpectedPluralRulesValues(string input, PluralRulesValues expected)
        {
            CultureInfo culture = new CultureInfo("shi");
            IPluralRulesResource resource = this.fixture.CardinalLocalizer.GetLocalizer(culture);
            PluralRulesValues result = resource.Evaluate(PluralRulesContext.Create(input));
            Assert.Equal(expected, result);
        }
    }
}